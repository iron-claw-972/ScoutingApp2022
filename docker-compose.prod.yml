version: "3.8"

services:
  nginx:
    image: nginx:1.21.5
    container_name: scoutingapp2022_prod_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/app/nginx/static
      - media:/app/nginx/media
    ports:
      - "${APP_PORT}:80"
    depends_ON:
      - frontend

  db:
    image: postgres:14.1
    container_name: scoutingapp2022_prod_db
    expose:
      - "5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}

  backend:
    build:
      context: ./backend
      target: prod
    container_name: scoutingapp2022_prod_backend
    volumes:
      - ./backend:/app/backend
      - static:/app/backend/static
      - media:/app/backend/media
    environment:
      - ENV=prod
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
      - DJANGO_SUPERUSER_USERNAME=${BACKEND_SU_USER}
      - DJANGO_SUPERUSER_PASSWORD=${BACKEND_SU_PASS}
      - DJANGO_SUPERUSER_EMAIL=${BACKEND_SU_EMAIL}
      - LOCALTUNNEL_SUBDOMAIN
      - TBA_API_KEY
      - TBA_WEBHOOK_SECRET
      - CSRF_TRUSTED_ORIGINS
      - BACKEND_PORT
      - APP_PORT
      - DEFAULT_CURRENT_EVENT_KEY
      - FRC_TEAM_NUMBER
      - FRC_YEAR
    expose:
      - "${BACKEND_PORT}"
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      target: prod
    container_name: scoutingapp2022_prod_frontend
    volumes:
      - ./frontend:/app/frontend
      - next:/app/frontend/.next
      - node_modules:/app/frontend/node_modules
    expose:
      - "3000"
    environment:
      - ENV=prod
      - NEXT_PUBLIC_TBA_API_KEY=${TBA_API_KEY}
    depends_on:
      - backend

  localtunnel:
    image: efrecon/localtunnel
    container_name: scoutingapp2022_prod_localtunnel
    links:
      - nginx
    command: --local-host nginx --port 80 --subdomain=${LOCALTUNNEL_SUBDOMAIN}
    depends_on:
      - nginx


volumes:
  next:
  node_modules:
  pgdata:
  static:
  media: